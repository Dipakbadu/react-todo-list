{"version":3,"sources":["components/Header.jsx","components/ToDo.jsx","components/ToDoList.jsx","components/ToDoForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","variant","Brand","href","ToDo","todo","handleToggle","handleClick","e","preventDefault","currentTarget","id","InputGroup","className","Prepend","Checkbox","aria-label","checked","complete","onChange","ListGroup","name","value","onClick","Item","task","Append","Button","console","log","ToDoList","toDoList","handleFilter","map","style","margin","ToDoForm","addTask","useState","userInput","setUserInput","onSubmit","Form","Control","type","placeholder","App","data","setToDoList","copy","length","Container","mapped","Number","filtered","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14509932.chunk.js","sourcesContent":["import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction Header () {\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">\n          To Do List\n        </Navbar.Brand>\n      </Navbar>\n    </>\n      )\n    }\n    export default Header","import React from 'react'\nimport './style.css'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Button from 'react-bootstrap/Button'\n\nconst ToDo = ({todo, handleToggle}) => {\n\n  const handleClick = (e) => {\n    e.preventDefault()\n    handleToggle(e.currentTarget.id)\n  }\n  const handleEditSubmit = () => {\n    console.log(todo.task)\n  }\n  return (\n    <InputGroup className=\"mb-3\">\n    <InputGroup.Prepend>\n      <InputGroup.Checkbox \n        aria-label=\"Checkbox for following text input\"\n        checked={todo.complete}\n        onChange = {handleClick}\n      />\n    </InputGroup.Prepend>\n    <ListGroup id={todo.id} key={todo.id} name=\"todo\" value={todo.id} onClick={handleClick} className={todo.complete ? \"todo strike\" : \"todo\"}>\n      <ListGroup.Item variant=\"secondary\">\n       {todo.task}\n      </ListGroup.Item>\n    </ListGroup>\n    <InputGroup.Append>\n      <Button variant=\"outline-secondary\" onClick={handleEditSubmit} >Edit</Button>\n    </InputGroup.Append>\n  </InputGroup>\n  )\n}\n\nexport default ToDo ","import React from 'react'\nimport ToDo from './ToDo'\n\nconst ToDoList = ({toDoList, handleToggle, handleFilter}) => {\n  return (\n    <div>\n      {toDoList.map(todo => {\n        return (\n          <ToDo todo = {todo} key={todo.id} handleToggle = {handleToggle} handleFilter = {handleFilter} />\n        )\n      })}\n      <button style={{margin: '20px'}} key = {toDoList.id} onClick={handleFilter}>Clear Completed</button>\n    </div>\n  )\n}\nexport default ToDoList","import React, { useState } from \"react\";\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Button from 'react-bootstrap/Button'\n\nconst ToDoForm = ({ addTask }) => {\n  const [userInput, setUserInput] = useState(\"\")\n\n  const handleChange = (e) => {\n    setUserInput(e.currentTarget.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    addTask(userInput)\n    setUserInput(\"\")\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className = \"mt-3\">\n      <InputGroup className=\"mb-2\">\n        <Form.Control \n          type=\"text\"\n          value = {userInput}\n          placeholder=\"Enter Your Task...\"\n          onChange = {handleChange}\n        />\n        <InputGroup.Append>\n          <Button type = \"submit\" variant=\"outline-secondary\">Add</Button>\n        </InputGroup.Append>\n      </InputGroup>\n    </form>\n  )\n}\n\nexport default ToDoForm;\n","import Header from './components/Header'\nimport React, {useState} from 'react'\nimport data from './data.json'\nimport ToDOList from './components/ToDoList'\nimport ToDoForm from './components/ToDoForm'\nimport Container from 'react-bootstrap/Container'\n\n\nfunction App() {\n  const [ toDoList, setToDoList ] = useState(data)\n\n  const handleToggle = (id) => {\n    let mapped = toDoList.map(task => {\n      return task.id === Number(id) ? { ...task, complete: !task.complete } : { ...task};\n    });\n    setToDoList(mapped);\n  }\n\n  const handleFilter = () => {\n    let filtered = toDoList.filter(task => {\n      return !task.complete;\n    });\n    setToDoList(filtered);\n  }\n  const addTask = (userInput) => {\n    let copy = [...toDoList]\n    copy = [...copy, {id:toDoList.length + 1, task: userInput, complete: false}]\n    setToDoList(copy)\n  }\n  return (    \n    <Container className = \"mt-3\">\n      <Header />\n      <ToDoForm addTask = {addTask} />\n      <ToDOList  toDoList = {toDoList} addTask = {addTask} handleToggle = {handleToggle} handleFilter = {handleFilter} />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}